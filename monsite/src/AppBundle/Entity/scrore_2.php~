<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * scrore_2
 *
 * @ORM\Table(name="scrore_2")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\scrore_2Repository")
 */
class scrore_2
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var int
     * a l'inverse de l'entity user onfait la relation avec ManyToOne car le score et lier à 1 utilisateur il prend  
     * 2 argument aussi le premier le nom de l'entity  viser le 2eme et le nom de lélément choisi
     * @ORM\Column(name="id_user", type="integer", unique=true)
     * @ORM\ManyToOne(targetEntity="User", inversedBy="score_2")
     */
    private $idUser;

    /**
     * @var string
     *
     * @ORM\Column(name="score_du_serpent", type="string", length=25)
     */
    private $scoreDuSerpent;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set idUser
     *
     * @param integer $idUser
     *
     * @return scrore_2
     */
    public function setIdUser($idUser)
    {
        $this->idUser = $idUser;

        return $this;
    }

    /**
     * Get idUser
     *
     * @return int
     */
    public function getIdUser()
    {
        return $this->idUser;
    }

    /**
     * Set scoreDuSerpent
     *
     * @param string $scoreDuSerpent
     *
     * @return scrore_2
     */
    public function setScoreDuSerpent($scoreDuSerpent)
    {
        $this->scoreDuSerpent = $scoreDuSerpent;

        return $this;
    }

    /**
     * Get scoreDuSerpent
     *
     * @return string
     */
    public function getScoreDuSerpent()
    {
        return $this->scoreDuSerpent;
    }
}

